using System;
using System.Collections.Generic;
using System.IO;
using System.Net.Http;
using System.Threading.Tasks;

namespace Dark.Common.Utils
{
    //通用的http请求库
    public class HttpTools
    {
        /// <summary>
        /// 简单的通过网页请求,来获取页面的数据
        /// </summary>
        /// <param name="url"></param>
        /// <returns></returns>
        public static async Task<string> GetAsyncByUrl(string url)
        {
            return await HttpFunc<string>(async (client) =>
            {
                var httpResponseMessage = await client.GetAsync(url);
                return await httpResponseMessage.Content.ReadAsStringAsync();
            });

        }

        /// <summary>
        /// 下载一个流
        /// </summary>
        /// <param name="url"></param>
        /// <returns></returns>
        public static async Task<Stream> DownloadAsync(string url)
        {
            using (HttpClient client = new HttpClient())
            {
                return await client.GetStreamAsync(url);
            }
        }


        public static async Task DownFileAsync(List<string> urls)
        {
            await HttpAction(async (c) =>
            {
                await Task.Factory.StartNew(() =>
                {

                });
            });
        }

        /// <summary>
        /// 一般的
        /// </summary>
        /// <typeparam name="T"></typeparam>
        /// <param name="func"></param>
        /// <returns></returns>
        private static async Task<T> HttpFunc<T>(Func<HttpClient, Task<T>> func)
        {
            using (HttpClient client = new HttpClient())
            {
                return await func(client);
            }
        }

        private static async Task HttpAction(Func<HttpClient, Task> action)
        {
            using (HttpClient client = new HttpClient())
            {
                await action(client);
            }
        }
    }
}
