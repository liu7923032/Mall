


<div class="layui-container" style="background-color:white;">
    <div class="row">
        <div class="layui-col-md12" style="padding:10px 0px;font-size:15px;">
            <span class="layui-breadcrumb " lay-separator="/">
                <a href="/">首页</a>
                <a><cite>购物车</cite></a>
            </span>
        </div>
    </div>
    <hr class="layui-bg-gray" />
    <!--------工具条--------->

    <div class="layui-row">
        <div class="layui-btn-group">
            <a class="layui-btn " id="btnCartReload"><i class="layui-icon">&#x1002;</i> 刷新</a>
            <a class="layui-btn layui-btn-danger layui-btn-normal" id="btnCartPay"><i class="layui-icon">&#xe609;</i> 去结账</a>
        </div>
    </div>

    <!--------表格数据--------->
    <div class="layui-row">
        <div class="layui-col-md12">
            <table class="layui-table" style="margin-top:0px;" lay-filter="tb_cart" id="tb_cart"></table>
        </div>
    </div>
    <!--------数据合计--------->
    
</div>



@section Scripts{

    <script type="text/javascript">
        layui.use(['table', 'element', 'layer', 'jquery'], function () {

            var table = layui.table
              , layer = layui.layer
              , $ = layui.jquery
              , _cartService = abp.services.app.cart;

            table.render({
                elem: '#tb_cart', //指定原始表格元素选择器（推荐id选择器）
                limits: [10, 20, 30],
                url: '/api/services/app/Cart/GetMyCart',
                page: false,
               // height: 'full-220',
                even: true,//开启隔行背景
                size: 'md' ,//小尺寸的表格
                where: {

                },
                id: 'tb_myCart',
                request: {
                    pageName: 'page' //页码的参数名称，默认：page
                    , limitName: 'limit' //每页数据量的参数名，默认：limit
                },
                response: {
                    statusName: 'success' //数据状态的字段名称，默认：code
                  , statusCode: true //成功的状态码，默认：0
                  , msgName: 'error' //状态信息的字段名称，默认：msg
                  , countName: 'totalCount' //数据总数的字段名称，默认：count
                  , dataName: 'items' //数据列表的字段名称，默认：data
                },
                cols: [[
                      { field: 'id', title: '标识', width: 80, align: 'center' },
                      { field: 'itemName', title: '物品名称', width: 200, templet: '#tpl_itemName' },
                      { field: 'itemSpecs', title: '物品规格', width: 300 },
                      { field: 'itemNum', title: '数量', width: 80, align: 'right', edit: 'text' },
                      { field: 'itemPrice', title: '积分', width: 80, sort: true, align: 'right' },
                      { field: 'allPrice', title: '小计', width: 80, sort: true, align: 'right' },
                      { field: 'action', title: '操作', width: 80, align: 'center', templet: '#tpl_cart_bar' },
                ]],
                done: function (res, curr, count) {
                    //计算合计项目

                  
                }
            });

            var methods = {

                initEvent: function () {
                    //方法绑定事件
                    $('#btnCartPay').click(function () {
                        methods.pay();
                    });

                    $('#btnCartReload').click(function () {
                        methods.reloadTb();
                    });
                    //模板操作事件
                    table.on('tool(tb_cart)', function (obj) { //注：tool是工具条事件名，test是table原始容器的属性 lay-filter="对应的值"
                        var data = obj.data; //获得当前行数据
                        var layEvent = obj.event; //获得 lay-event 对应的值
                        var tr = obj.tr; //获得当前行 tr 的DOM对象

                        if (layEvent === 'del') { //删除
                            methods.delItem(obj);
                        } 
                    });

                    table.on('edit(tb_cart)', function (obj) { //注：tool是工具条事件名，test是table原始容器的属性 lay-filter="对应的值"
                        var value = obj.value //得到修改后的值
                            , data = obj.data //得到所在行所有键值
                            , field = obj.field; //得到字段
                        //1:检查值是否正确
                        if (isNaN(value)) {
                            layer.msg('字段必须是<span style="color:red;">[数字]</span>:' + value);
                            obj.update({
                                itemNum: value
                            });
                            return;
                        }
                        //2:更新到数据库中
                        var updateParams={
                            id: data.id,
                            itemNum: parseInt(value)
                        }

                        _cartService.updateProductNums(updateParams, {
                            success: function () {
                                console.log(obj);
                                obj.update({
                                    itemNum: updateParams.itemNum,
                                    allPrice: updateParams.itemNum * parseFloat(data.itemPrice)
                                });
                            }
                        })
                    });

                },
                //付款
                pay: function () {
                    //1.获取选中行的数据
                    var cartData = table.cache["tb_myCart"];
                    if (cartData.length == 0) {
                        abp.message.error("购物车中没有要结算的商品");
                        return
                    }
                    //1:找到表格中选择的数据
                    layer.confirm('确认要结账?', function (index) {
                        layer.close(index);
                        _cartService.checkOut({
                            success: function () {
                                //1.清空购物车
                                methods.reloadTb();
                                //2.清空右边购物车数量
                                $('#cart_pNum').text(0);

                            }
                        });
                    });

                },
                //刷新table
                reloadTb: function () {
                    table.reload('tb_myCart');
                },
                //删除
                delItem: function (obj) {
                    layer.confirm('真的删除行么', function (index) {
                        layer.close(index);
                        //向服务端发送删除指令
                        _cartService.delProduct(obj.data.id, {
                            success: function (data) {
                                obj.del(); //删除对应行（tr）的DOM结构，并更新缓存
                            }
                        });
                    });
                },
                //更新产品数量
                updateItemNum: function () {
                    var param = {
                        productId: 1,
                        itemNum: 1
                    }
                    _cartService.updateProductNums(param, {
                        success: function (res) {
                            //更新成功后,将表格数据更新成功

                        }
                    });
                }
            }




            methods.initEvent();
        });
    </script>
    <!--------这个是物料名称的模板信息---------->
    <script type="text/html" id="tpl_itemName">
        {{#  if(d.id!== 0){ }}
            <a href="/Home/Details/{{d.id}}" class="layui-table-link" target="_blank">{{ d.itemName }}</a>
        {{#  }else { }}
            <span style="color:blue;">总计</span>
        {{#  } }}
    </script>

    <!--------这个是操作按钮的---------->
    <script type="text/html" id="tpl_cart_bar">
        {{#  if(d.id!== 0){ }}
            <a class="layui-btn layui-btn-danger layui-btn-mini" lay-event="del">删除</a>
        {{#  } }}
    </script>





}